/*******************************************************************************
 *                   	       GPCNC
 *           The General-Purposed CNC Software Develop Environment
 *           (c) Copyright 2004-2013, Automation Depatment of NJIT
 *                         All Rights Reserved
 *
 *-----------------------文件信息-----------------------------------------------
 * 文件名: .c
 * 描  述:
 *
 * 创建人:
 * 版  本:
 * 日  期:
 *
 * 修改人:
 * 版  本:
 * 日　期:
 * 修改信息:
 *
 * 说明:
 *
 *...
 ***********************************************************************************/
/***********************************************************************************/
#include "Protocol/linuxtypes.h"

#include "Protocol/bus.h"
#include <string.h>
#include "Protocol/robot.h"

#include "IO.h"

/***********************************************************************************/
/*KeyIO---------------------------------------------------------------*/
u8    ioKIc[16];     /* 128b */
u8    ioKOc[16];    /* 128b */
u8    ioKIp[16];     /* 128b */
u8    ioKOp[16];    /* 128b */

/*PadIO---------------------------------------------------------------*/
u8    ioPIc[16];      /* 128b */
u8    ioPOc[16];    /* 128b */
u8    ioPIp[16];     /* 128b */
u8    ioPOp[16];    /* 128b */

/*DIO-----------------------------------------------------------------*/
u8    ioDIc[20];     /* 160b */
u8    ioDOc[20];     /* 160b */
u8    ioDIp[20];     /* 160b */
u8    ioDOp[20];     /* 160b */

sDIc  ioDIState;
sDOc  ioDOState;

/*AIO-----------------------------------------------------------------*/
u16   ioAI[8];       /* 8ch  */
u16   ioAO[4];      /* 4ch  */

/*MIO-----------------------------------------------------------------*/
u8    ioMIc[64];    /* 512b */
u8    ioMOc[64];    /* 512b */
u8    ioMIp[64];    /* 512b */
u8    ioMOp[64];    /* 512b */

/*TC------------------------------------------------------------------*/
u16   tcDi[40];     /* TC 初始值 */
u16   tcDc[40];     /* TC 当前值 */
u8    tcEN[40];     /* TC 使能   */
u8    tcM [40];     /* TC 模式，定时vs计数 */

/******************************************************************************/
extern u8 IO_Get(u8 *pIO, u16 Addr)
{
    u16 i, j;
    i = Addr >> 3;    /* 除以8，商   */
    j = Addr & 0x07;  /* 除以8，余数 */

    return pIO[i] & (1 << j);

}
extern u8 IO_Check(u8 *pIO, u16 Addr)
{
    u16 i, j;
    i = Addr >> 3;    /* 除以8，商   */
    j = Addr & 0x07;  /* 除以8，余数 */

    if(pIO[i] & (1<<j))  return 1;
    else                 return 0;

}
extern void IO_Set(u8 *pIO, u16 Addr)
{
    u16 i, j;
    i = Addr >> 3;    /* 除以8，商   */
    j = Addr & 0x07;  /* 除以8，余数 */

    pIO[i] |=  (1 << j);
}

extern void IO_Reset(u8 *pIO, u16 Addr)
{
    u16 i, j;
    i = Addr >> 3;    /* 除以8，商   */
    j = Addr & 0x07;  /* 除以8，余数 */

    pIO[i] &= ~(1 << j);

}



/***********************************************************************************/
/***********************************************************************************/
